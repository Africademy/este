### This file was autogenerated by Nexus 0.11.6
### Do not make changes to this file directly


type CreateWebErrors {
  name: Max140CharsError
}

input CreateWebInput {
  name: String!
}

type CreateWebPayload {
  errors: CreateWebErrors
  web: Web
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DeleteWebInput {
  id: ID!
}

type DeleteWebPayload {
  web: Web
}

enum EmailError {
  ALREADY_EXISTS
  EMAIL
  NOT_EXISTS
  REQUIRED
}

enum Max140CharsError {
  MAX_140_CHARS
  REQUIRED
}

type Mutation {
  createWeb(input: CreateWebInput!): CreateWebPayload!
  deleteWeb(input: DeleteWebInput!): DeleteWebPayload!
  setUserTheme(input: SetUserThemeInput!): SetUserThemePayload!
  signIn(input: SignInInput!): SignInPayload!
  updateWeb(input: UpdateWebInput!): UpdateWebPayload!
}

enum PasswordError {
  MAX_1024_CHARS
  MIN_5_CHARS
  REQUIRED
  WRONG_PASSWORD
}

type Query {
  requiredViewer: User!
  viewer: User
  web(id: ID!): Web!
}

input SetUserThemeInput {
  name: String!
}

type SetUserThemePayload {
  user: User
}

type SignInErrors {
  email: EmailError
  password: PasswordError
}

input SignInInput {
  createAccount: Boolean!
  email: String!
  password: String!
}

type SignInPayload {
  errors: SignInErrors
  token: String
}

type UpdateWebErrors {
  name: Max140CharsError
}

input UpdateWebInput {
  id: ID!
  name: String!
}

type UpdateWebPayload {
  errors: UpdateWebErrors
  web: Web
}

type User {
  createdAt: DateTime!
  email: String!
  id: ID!
  themeName: String!
  updatedAt: DateTime!
  webs: [Web!]!
}

type Web {
  createdAt: DateTime!
  creator: User!
  id: ID!
  name: String!
  updatedAt: DateTime!
}
